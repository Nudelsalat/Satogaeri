<?xml version="1.0" encoding="UTF-8"?>
<project name="satogaeri" default="all">
  
  
  <property file="satogaeri_antbuild.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm4-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  <import file="${basedir}/module_satogaeri.xml"/>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.satogaeri, clean.artifact.satogaeri, clean.artifact.satogaeri_linux_v1" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.satogaeri" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.satogaeri" value="${basedir}/out/artifacts/Satogaeri"/>
    <property name="artifact.output.satogaeri_linux_v1" value="${basedir}/out/artifacts/Satogaeri_linux_v1"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="artifact.temp.output.Satogaeri" value="${artifacts.temp.dir}/Satogaeri.jar"/>
    <property name="artifact.temp.output.Satogaeri2" value="${artifacts.temp.dir}/1/Satogaeri.jar"/>
    <mkdir dir="${artifacts.temp.dir}/1"/>
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${jdk.home.1.8}/lib/ant-javafx.jar"/>
  </target>
  
  <target name="clean.artifact.satogaeri" description="clean Satogaeri artifact output">
    <delete dir="${artifact.output.satogaeri}"/>
  </target>
  
  <target name="clean.artifact.satogaeri_linux_v1" description="clean Satogaeri_linux_v1 artifact output">
    <delete dir="${artifact.output.satogaeri_linux_v1}"/>
  </target>
  
  <target name="artifact.satogaeri" depends="init.artifacts, compile.module.satogaeri" description="Build &#39;Satogaeri&#39; artifact" xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <mkdir dir="${artifact.output.satogaeri}"/>
    <copy todir="${artifact.temp.output.Satogaeri}">
      <fileset dir="${satogaeri.output.dir}"/>
    </copy>
    <fx:fileset id="all_but_Satogaeri" dir="${artifact.temp.output.Satogaeri}" includes="**/*.jar">
      <exclude name="Satogaeri.jar"/>
    </fx:fileset>
    <fx:fileset id="all_Satogaeri" dir="${artifact.temp.output.Satogaeri}" includes="**/*.jar"/>
    <fx:application id="Satogaeri_id" name="Satogaeri" mainClass="sample.Main"/>
    <fx:jar destfile="${artifact.temp.output.Satogaeri}\Satogaeri.jar">
      <fx:application refid="Satogaeri_id"/>
      <fileset dir="${artifact.temp.output.Satogaeri}" excludes="**/*.jar"/>
      <fx:resources>
        <fx:fileset refid="all_but_Satogaeri"/>
      </fx:resources>
      <manifest/>
    </fx:jar>
    <fx:deploy width="600" height="400" updatemode="background" outdir="${artifact.temp.output.Satogaeri}\deploy" outfile="Satogaeri" nativeBundles="rpm">
      <fx:application refid="Satogaeri_id"/>
      <fx:info title="Satogaeri"/>
      <fx:resources>
        <fx:fileset refid="all_Satogaeri"/>
      </fx:resources>
    </fx:deploy>
    <copy todir="${artifact.output.satogaeri}">
      <fileset dir="${artifact.temp.output.Satogaeri}/deploy"/>
    </copy>
    <delete includeemptydirs="true">
      <fileset dir="${artifact.temp.output.Satogaeri}"/>
    </delete>
  </target>
  
  <target name="artifact.satogaeri_linux_v1" depends="init.artifacts, compile.module.satogaeri" description="Build &#39;Satogaeri_linux_v1&#39; artifact" xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <mkdir dir="${artifact.output.satogaeri_linux_v1}"/>
    <copy todir="${artifact.temp.output.Satogaeri2}">
      <fileset dir="${satogaeri.output.dir}"/>
    </copy>
    <fx:fileset id="all_but_Satogaeri" dir="${artifact.temp.output.Satogaeri2}" includes="**/*.jar">
      <exclude name="Satogaeri.jar"/>
    </fx:fileset>
    <fx:fileset id="all_Satogaeri" dir="${artifact.temp.output.Satogaeri2}" includes="**/*.jar"/>
    <fx:application id="Satogaeri_id" name="Satogaeri_linux_v1" mainClass="sample.Main"/>
    <fx:jar destfile="${artifact.temp.output.Satogaeri2}\Satogaeri.jar">
      <fx:application refid="Satogaeri_id"/>
      <fileset dir="${artifact.temp.output.Satogaeri2}" excludes="**/*.jar"/>
      <fx:resources>
        <fx:fileset refid="all_but_Satogaeri"/>
      </fx:resources>
      <manifest/>
    </fx:jar>
    <fx:deploy width="600" height="400" updatemode="background" outdir="${artifact.temp.output.Satogaeri2}\deploy" outfile="Satogaeri" nativeBundles="rpm">
      <fx:application refid="Satogaeri_id"/>
      <fx:info title="Satogaeri"/>
      <fx:resources>
        <fx:fileset refid="all_Satogaeri"/>
      </fx:resources>
    </fx:deploy>
    <copy todir="${artifact.output.satogaeri_linux_v1}">
      <fileset dir="${artifact.temp.output.Satogaeri2}/deploy"/>
    </copy>
    <delete includeemptydirs="true">
      <fileset dir="${artifact.temp.output.Satogaeri2}"/>
    </delete>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.satogaeri, artifact.satogaeri_linux_v1" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>